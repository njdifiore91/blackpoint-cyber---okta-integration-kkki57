apiVersion: apps/v1
kind: Deployment
metadata:
  name: normalizer
  namespace: blackpoint-system
  labels:
    app: normalizer
    tier: silver
    component: data-processing
  annotations:
    kubernetes.io/change-cause: "Update for production requirements"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: normalizer
  template:
    metadata:
      labels:
        app: normalizer
        tier: silver
        component: data-processing
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: normalizer
        image: blackpoint/normalizer:1.0.0
        imagePullPolicy: Always
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
        volumeMounts:
        - name: config
          mountPath: /etc/normalizer
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: "/etc/normalizer/normalizer.yaml"
        - name: LOG_LEVEL
          value: "info"
        - name: METRICS_ENABLED
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: config
        configMap:
          name: normalizer-config
      - name: secrets
        secret:
          secretName: normalizer-secrets
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: normalizer
              topologyKey: topology.kubernetes.io/zone
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule