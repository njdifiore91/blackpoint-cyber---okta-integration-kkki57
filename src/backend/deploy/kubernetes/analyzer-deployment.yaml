apiVersion: apps/v1
kind: Deployment
metadata:
  name: analyzer
  namespace: blackpoint-system
  labels:
    app: blackpoint
    component: analyzer
    tier: gold
    security-tier: restricted
    monitoring: enabled
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: blackpoint
      component: analyzer
      tier: gold
  template:
    metadata:
      labels:
        app: blackpoint
        component: analyzer
        tier: gold
        security-tier: restricted
        monitoring: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        security.policy/version: "v1"
        checksum/config: "${CONFIG_CHECKSUM}"
    spec:
      containers:
      - name: analyzer
        image: blackpoint/analyzer:1.0.0
        imagePullPolicy: Always
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: analyzer-config
              key: log_level
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: analyzer-config
              key: environment
        - name: METRICS_ENABLED
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        volumeMounts:
        - name: config
          mountPath: /etc/blackpoint/config
          readOnly: true
        - name: tmp
          mountPath: /tmp
          readOnly: false
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 2000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: analyzer-config
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: blackpoint
                  component: analyzer
              topologyKey: kubernetes.io/hostname
          - weight: 90
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: blackpoint
                  component: analyzer
              topologyKey: topology.kubernetes.io/zone
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: analyzer-service-account
      terminationGracePeriodSeconds: 60