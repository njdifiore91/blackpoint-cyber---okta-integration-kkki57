# Stage 1: Builder
FROM golang:1.21-alpine AS builder
# v1.21-alpine - Minimal Go base image for test environment

# Install build dependencies
RUN apk add --no-cache \
    git \
    make \
    curl \
    gcc \
    g++ \
    libc-dev \
    bash

WORKDIR /app

# Copy Go module files for dependency management
COPY go.mod go.sum ./
RUN go mod download

# Copy test source code and configurations
COPY . .

# Build test binaries
RUN go test -c ./... -o /app/bin/tests

# Stage 2: Final test environment
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache \
    bash \
    curl \
    docker-cli~=24.0 \
    ca-certificates \
    tzdata

# Install k6 for performance testing
RUN curl -L https://github.com/grafana/k6/releases/download/v0.46.0/k6-v0.46.0-linux-amd64.tar.gz | tar xz && \
    mv k6-v0.46.0-linux-amd64/k6 /usr/local/bin/ && \
    rm -rf k6-v0.46.0-linux-amd64

WORKDIR /app

# Copy test binaries and dependencies from builder
COPY --from=builder /app/bin/tests /app/bin/
COPY --from=builder /app/configs /app/configs
COPY --from=builder /app/scripts /app/scripts
COPY --from=builder /app/testdata /app/testdata

# Set up test environment variables
ENV GO_VERSION=1.21 \
    K6_VERSION=0.46.0 \
    DOCKER_VERSION=24.0 \
    TEST_TIMEOUT=30m \
    PERFORMANCE_ITERATIONS=1000 \
    ACCURACY_THRESHOLD=0.80 \
    PATH="/app/bin:${PATH}"

# Create test directories
RUN mkdir -p /app/reports /app/artifacts /var/log/blackpoint && \
    chmod +x /app/scripts/*.sh

# Set up test environment
RUN /app/scripts/setup_test_env.sh

# Health check to verify test environment
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default test execution entrypoint
ENTRYPOINT ["/app/scripts/run_tests.sh"]

# Allow override of test parameters
CMD ["--all"]

# Labels for container metadata
LABEL maintainer="BlackPoint Security" \
      version="1.0.0" \
      description="Test environment for BlackPoint Security Integration Framework" \
      org.opencontainers.image.source="https://github.com/blackpoint/security" \
      org.opencontainers.image.documentation="https://github.com/blackpoint/security/docs/testing.md"